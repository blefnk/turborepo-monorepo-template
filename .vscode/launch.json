{
  "compounds": [
    {
      "configurations": ["Launch Next.js"],
      "name": "Launch Next.js"
    },
    {
      "configurations": ["Launch Next.js", "Launch Next.js in Chrome"],
      "name": "Launch Next.js and Chrome"
    }
  ],
  "configurations": [
    {
      "name": "Attach by Process ID",
      "processId": "${command:PickProcess}",
      "request": "attach",
      "restart": true,
      "type": "node"
    },
    {
      "console": "internalConsole",
      "env": {
        "NODE_OPTIONS": "--inspect"
      },
      "name": "Launch Next.js",
      "program": "${workspaceFolder}/node_modules/next/dist/bin/next",
      "request": "launch",
      "sourceMaps": true,
      "trace": true,
      "type": "node"
    },
    {
      "name": "Launch Next.js in Chrome",
      "request": "launch",
      "type": "chrome",
      "url": "http://localhost:3000",
      "webRoot": "${workspaceFolder}"
    },
    {
      "name": "Astro Development server",
      "command": "./node_modules/.bin/astro dev",
      "request": "launch",
      "type": "node-terminal"
    },
    {
      "type": "bun",
      "request": "launch",
      "name": "Debug bun",
      // The path to a JavaScript or TypeScript file to run.
      "program": "${file}",
      // The arguments to pass to the program, if any.
      "args": [],
      // The working directory of the program.
      "cwd": "${workspaceFolder}",
      // The environment variables to pass to the program.
      "env": {},
      // If the environment variables should not be inherited from the parent process.
      "strictEnv": false,
      // If the program should be run in watch mode.
      // This is equivalent to passing `--watch` to the `bun` executable.
      // You can also set this to "hot" to enable hot reloading using `--hot`.
      "watchMode": false,
      // If the debugger should stop on the first line of the program.
      "stopOnEntry": false,
      // If the debugger should be disabled. (for example, breakpoints will not be hit)
      "noDebug": false,
      // The path to the `bun` executable, defaults to your `PATH` environment variable.
      "runtime": "bun",
      // The arguments to pass to the `bun` executable, if any.
      // Unlike `args`, these are passed to the executable itself, not the program.
      "runtimeArgs": []
    },
    {
      "type": "bun",
      "request": "attach",
      "name": "Attach to bun",
      // The URL of the WebSocket inspector to attach to.
      // This value can be retrieved by using `bun --inspect`.
      "url": "ws://localhost:6499/"
    }
  ],
  "type": "module",
  "version": "0.2.0"
}
